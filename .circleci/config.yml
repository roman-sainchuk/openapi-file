version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
orbs:
  node: circleci/node@5.2.0
jobs:
  push:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      # TODO: use redocly/cli image
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    environment:
      VCS: << pipeline.project.type >>
      PROVIDER: << pipeline.trigger_parameters.circleci.trigger_type >>
      CURRENT_BRANCH: << pipeline.git.branch >>
      COMMIT_SHA: << pipeline.git.revision >>
      REPO_URL: << pipeline.project.git_url >>
    steps:
      - checkout
      - node/install:
          node-version: "20.4.0"
      - node/install-packages
      - run:
          name: "Push"

          command: |-
            REMOTE_INFO="$(git remote show $(git remote))";
            DEFAULT_BRANCH=$(echo "$REMOTE_INFO" | sed -n '/HEAD branch/s/.*: //p');
            REPOSITORY=$(basename $REPO_URL);
            AUTHOR="$(git log --format='%an <%ae>' $COMMIT_SHA^!)";
            MESSAGE="$(git log --format='%B' $COMMIT_SHA^!)";
            COMMIT_TIMESTAMP="$(git log --format=%cI $COMMIT_SHA^!)";            


            NAMESPACE=""

            if [[ $PROVIDER == 'github_app' ]]; then
              COMMIT_URL="$REPO_URL/commit/$COMMIT_SHA"
              NAMESPACE="$(basename $(echo "$REPO_URL" | sed "s/$REPOSITORY//p"))"
            elif [[ $PROVIDER == 'gitlab' ]]; then
              COMMIT_URL="$REPO_URL/-/commit/$COMMIT_SHA"
              NAMESPACE=""
            fi


            IS_MAIN_BRANCH=false;

            if [[ $DEFAULT_BRANCH == $CURRENT_BRANCH ]]; then
              IS_MAIN_BRANCH=true;
            fi

            PUSH_ID=`npm run -s push -- docs \
              --organization 'default' \
              --project 'push-rework' \
              --mountPath 'docs/remotes/cicd' \
              --isMainBranch $IS_MAIN_BRANCH \
              --branch "$CURRENT_BRANCH" \
              --author "$AUTHOR" \
              --commitUrl "$COMMIT_URL" \
              --createdAt "$COMMIT_TIMESTAMP" \
              --namespace "$NAMESPACE" \
              --repository "$REPOSITORY" \
              --message "$MESSAGE" \
              --domain 'https://app.lab1.blueharvest.cloud'`

            echo "VCS: $VCS , CURRENT_BRANCH: $CURRENT_BRANCH , COMMIT_SHA: $COMMIT_SHA, IS_MAIN_BRANCH: $IS_MAIN_BRANCH";
            echo "DEFAULT_BRANCH: $DEFAULT_BRANCH , AUTHOR: $AUTHOR, MESSAGE: $MESSAGE, PROVIDER: $PROVIDER";
            echo "COMMIT_TIMESTAMP: $COMMIT_TIMESTAMP, REPOSITORY: $REPOSITORY, COMMIT_URL: $COMMIT_URL, NAMESPACE: $NAMESPACE"
            echo "PUSH_ID: $PUSH_ID"
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  push-to-redocly:
    jobs:
      - push
